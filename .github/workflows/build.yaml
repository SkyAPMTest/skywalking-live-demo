# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      ref:
        description: The branch, tag or SHA of the main repo
        required: true
        default: master

env:
  HUB: ghcr.io/skyapmtest

jobs:
  build-agent:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v2
        with:
          path: skywalking
          submodules: true
          repository: apache/skywalking
          ref: ${{ github.event.inputs.ref }}

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('skywalking/**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build Agent
        env:
          SKIP_TEST: true
        run: make -C skywalking build.all docker.agent push.docker.agent

  build-demo:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    needs:
      - build-agent
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Build Artefacts
        run: ./mvnw --batch-mode clean package
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build Docker Images
        run: |
          for project in {projectA,projectB,projectC,projectD,eureka-service}; do
            docker build --build-arg TARGET_JAR=$project/target/$project.jar . -t ${HUB}/$(echo "$project" | tr '[:upper:]' '[:lower:]')
            docker push ${HUB}/$(echo "$project" | tr '[:upper:]' '[:lower:]')
          done
